; Test PIO program for outputting data with approximate ISA timing.
;
; Copyright (C) 2021 Titanium Studios Pty Ltd 
; 
; This program is free software : you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program.If not, see < https://www.gnu.org/licenses/>.

; Possible pin order
;        uint data : num_data_bits;
;        uint inv_dack : 1;
;        uint inv_ior : 1;
;        uint inv_iow : 1;
;        uint inv_cs : 1;
;        uint aen : 1;
;        uint addr : num_addr_bits;
;
;        uint drq : 1;
;        uint irq : 1;
;        uint inv_reset : 1;

; 10 instructions
.program data_write
wait_for_write_start:
    mov osr, pins   ; Get current pin state
    mov isr, osr    ; Save to previous value
    out null, 10     ; Skip data, ~DACK and ~IOR
    out x, 5        ; ~IOW, ~CS, AEN, A0, A1, to X (want all 0)
    jmp x--, wait_for_write_start
    
wait_for_write_end:
    mov osr, pins
    jmp pin write_value    ; Break if ~IOW has gone high.
    mov isr, osr    ; Update previous value
    jmp wait_for_write_end

write_value:
    push block      ; Send the last value read before ~IOW went high.


; TODO: should probably enable pullups on data lines in case there is 
; some way the tranceiver reverses without pindirs being set.
; TODO: Should init x to FF as this will be the default value if the fifo
; is read while not empty.
; 6 instructions. 7 cycles of latency.
.program data_read
.side_set 1 opt
wait_for_read_start:
    mov osr, pins                   ; in pins are configured to start at Address lines
    out y, 5                        ; Shift A1, A0, ~IOR, ~CS, AEN into Y (want all 0)
    jmp y--, wait_for_read_start

    ; Place data on the bus.
    pull noblock side 1             ; Get data, change tranceiver direction. set_pindirs program will set pin directions.
    out pins, 8                     ; Set data
    wait 1 pin 2					; Wait for ~IOR high. set_pindirs will take care of restoring pindirs and tranceiver dir.
